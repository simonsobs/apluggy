[build-system]
requires = ["hatchling", "hatch-regex-commit"]
build-backend = "hatchling.build"

[project]
name = "apluggy"
description = 'A wrapper of "pluggy" to support asyncio and context managers'
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = []
authors = [{ name = "Tai Sakuma", email = "tai.sakuma@gmail.com" }]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "pluggy>=1.3",
  "decorator>=5.1",
  "types-decorator>=5.1",
  "typing_extensions>=4.12; python_version < '3.10'",
]
dynamic = ["version"]

[project.optional-dependencies]
tests = [
  "pytest-asyncio>=0.18",
  "pytest-cov>=3.0",
  "pytest-timeout>=2.1",
  "pytest>=7.0",
  "hypothesis>=6.68",
]

[project.urls]
Documentation = "https://github.com/simonsobs/apluggy#readme"
Issues = "https://github.com/simonsobs/apluggy/issues"
Source = "https://github.com/simonsobs/apluggy"

[tool.hatch.version]
source = "regex_commit"
path = "src/apluggy/__about__.py"
tag_sign = false

[tool.pytest.ini_options]
asyncio_mode = "auto"
timeout = 60
addopts = """
--doctest-modules
--doctest-glob='*.md'
"""
# doctest_optionflags = ["ELLIPSIS", "NORMALIZE_WHITESPACE",]
doctest_optionflags = ["ELLIPSIS"]
filterwarnings = ["ignore::hypothesis.errors.NonInteractiveExampleWarning"]

[tool.ruff]
line-length = 88

[tool.ruff.format]
quote-style = "preserve"

[tool.ruff.lint]
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
]
ignore = [
  "E203", # Whitespace before '{symbol}'
  "E265", # Block comment should start with #
  "E266", # Too many leading # before block comment
  "E501", # Line too long ({width} > {limit})
  "E741", # Ambiguous variable name '{name}'
]

[tool.ruff.lint.mccabe]
max-complexity = 20

[tool.ruff.lint.isort]
#

[tool.coverage.run]
branch = true
parallel = true
source = ["src/apluggy", "tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]


[[tool.mypy.overrides]]
module = ["pluggy.*", "apluggy.*"]
ignore_missing_imports = true
